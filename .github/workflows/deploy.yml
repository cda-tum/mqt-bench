name: Deploy to PyPI

on:
  release:
    types: [published]
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build_wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
        name: Install Python
      - name: Build wheel
        run: pipx run build --wheel
      - name: Install wheel
        run: python -m pip install --verbose dist/*.whl
      - name: Run tests
        run: |
          pip install pytest
          pytest mqt/benchviewer/src/tests/test_backend.py -k 'test_flask_server'
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
        name: Install Python
      - name: Build sdist
        run: pipx run build --sdist
      - name: Install sdist
        run: python -m pip install --verbose dist/*.tar.gz
      - name: Run tests
        run: |
          pip install pytest
          pytest mqt/benchviewer/src/tests/test_backend.py -k 'test_flask_server'
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheel, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          skip_existing: true
          verbose: true
